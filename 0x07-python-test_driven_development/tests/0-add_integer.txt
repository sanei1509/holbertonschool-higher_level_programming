************************
Test -> 0-add_integer.py
========================
>>> add_integer = __import__('0-add_integer').add_integer

=======SUCCES CASES============

>>> add_integer(0, 0)
0

>>> add_integer(-5, -5)
-10

>>> add_integer(5, 5)
10

>>> add_integer(10, -2)
8

>>> print(add_integer(-98))
0

>>> print(add_integer(0))
98

>>> print(add_integer(2.5, 14))
16

>>> print(add_integer(10))
108

>>> add_integer(2.939294, 10.31213)
12

========ERROR string passed==========
>>> add_integer("num 20")
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(5.403, "random_String")
Traceback (most recent call last):
TypeError: b must be an integer

=========ERROR Empty arguments========
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(None, 1002)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

>>> add_integer(103, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("", "")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> print(add_integer(12,[""]))
Traceback (most recent call last):
...
TypeError: b must be an integer

=========Arguments Errors============
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer( , 2)
Traceback (most recent call last):
...
SyntaxError: invalid syntax

>>> add_integer(2, 2, 2)
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
